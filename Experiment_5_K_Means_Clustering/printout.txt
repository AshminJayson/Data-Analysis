#Experiment No : 5
#Date : 01/11/22
#Aim : Program to implement K Means Clustering Algorithm 
#Ashmin Jayson S5 DS ROll No : 14

from random import randint


def euclideandist(a, b):
	dist = 0
	for ind in range(len(a)):
		dist += (a[ind] - b[ind]) ** 2
	return (dist ** 0.5)

def printer(dp, centroids, clusterlist, dists):
	line = '-' * (len(centroids) + 1) * 15
	print(line)
	print("|{:^13}|".format("-"), end = ' ')
	for i in centroids : 
		print("{:^12} |".format(str(i)), end = ' ')
	print()
	for i in range(len(dp)):
		print("|{:^13}|".format(str(dp[i])), end = ' ')
		for j in range(len(centroids)):
			print("{:^12} |".format(str(dists[i][j])), end = ' ')
		print()
	print(line)
f = open('./dataset.txt', 'r')

lines = f.readlines()
dp = []
for line in lines:
	dp.append(list(map(int, line.split(','))))

num_of_dp = len(dp)
num_of_attr = len(dp[0])

k = randint(2, num_of_dp - 1)
print("The randomly chosen number of clusters is : ", k)

centroids = []

while len(centroids) != k:
	temp = randint(0, num_of_dp - 1)
	
	if dp[temp] not in centroids:
		centroids.append(dp[temp])

print("The randomly chosen centroids are : ", centroids)

clusterlist = [-1] * len(dp)
check = True
itercount = 1
while check:
	check = False
	
	dists = []
	for pno, p in enumerate(dp):
		closestcentroid, valclosestcentroid = -1, 100000
		tdist = [] 
		for i, cent in enumerate(centroids):
			dist = euclideandist(p, cent)
			tdist.append(round(dist, 2))
			
			if dist < valclosestcentroid :
				valclosestcentroid = dist
				closestcentroid = i
			
		if clusterlist[pno] != closestcentroid:
			check = True
			clusterlist[pno] = closestcentroid
		dists.append(tdist)
	
	print("\n\nIteration : ", itercount)
	itercount += 1
	printer(dp, centroids, clusterlist, dists)
	for ind in range(len(centroids)):
		mean, count = [0] * num_of_attr, 0
		
		for p, clust in enumerate(clusterlist):
			if clust == ind:
				count += 1
				for i in range(num_of_attr):
					mean[i] += dp[p][i]
					
		for i in range(num_of_attr):
			mean[i] /= count
			
		mean = [round(i, 2) for i in mean]
		centroids[ind] = mean
		
Output : 

Dataset: 
1,7
2,10
6,4
5,7
10,12
3,5
7,10	
		
The randomly chosen number of clusters is :  2
The randomly chosen centroids are :  [[5, 7], [6, 4]]


Iteration :  1
---------------------------------------------
|      -      |    [5, 7]    |    [6, 4]    | 
|   [1, 7]    |     4.0      |     5.83     | 
|   [2, 10]   |     4.24     |     7.21     | 
|   [6, 4]    |     3.16     |     0.0      | 
|   [5, 7]    |     0.0      |     3.16     | 
|  [10, 12]   |     7.07     |     8.94     | 
|   [3, 5]    |     2.83     |     3.16     | 
|   [7, 10]   |     3.61     |     6.08     | 
---------------------------------------------


Iteration :  2
---------------------------------------------
|      -      | [4.67, 8.5]  |  [6.0, 4.0]  | 
|   [1, 7]    |     3.96     |     5.83     | 
|   [2, 10]   |     3.06     |     7.21     | 
|   [6, 4]    |     4.69     |     0.0      | 
|   [5, 7]    |     1.54     |     3.16     | 
|  [10, 12]   |     6.38     |     8.94     | 
|   [3, 5]    |     3.88     |     3.16     | 
|   [7, 10]   |     2.77     |     6.08     | 
---------------------------------------------


Iteration :  3
---------------------------------------------
|      -      |  [5.0, 9.2]  |  [4.5, 4.5]  | 
|   [1, 7]    |     4.57     |     4.3      | 
|   [2, 10]   |     3.1      |     6.04     | 
|   [6, 4]    |     5.3      |     1.58     | 
|   [5, 7]    |     2.2      |     2.55     | 
|  [10, 12]   |     5.73     |     9.3      | 
|   [3, 5]    |     4.65     |     1.58     | 
|   [7, 10]   |     2.15     |     6.04     | 
---------------------------------------------


Iteration :  4
---------------------------------------------
|      -      | [6.0, 9.75]  | [3.33, 5.33] | 
|   [1, 7]    |     5.71     |     2.87     | 
|   [2, 10]   |     4.01     |     4.86     | 
|   [6, 4]    |     5.75     |     2.98     | 
|   [5, 7]    |     2.93     |     2.36     | 
|  [10, 12]   |     4.59     |     9.43     | 
|   [3, 5]    |     5.62     |     0.47     | 
|   [7, 10]   |     1.03     |     5.94     | 
---------------------------------------------


Iteration :  5
---------------------------------------------
|      -      | [6.33, 10.67] | [3.75, 5.75] | 
|   [1, 7]    |     6.47     |     3.02     | 
|   [2, 10]   |     4.38     |     4.6      | 
|   [6, 4]    |     6.68     |     2.85     | 
|   [5, 7]    |     3.9      |     1.77     | 
|  [10, 12]   |     3.9      |     8.84     | 
|   [3, 5]    |     6.58     |     1.06     | 
|   [7, 10]   |     0.95     |     5.35     | 
---------------------------------------------

		



